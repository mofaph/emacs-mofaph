(1
 (ace-jump-mode . [(20140616 115) nil "a quick cursor location minor mode for emacs" single])
 (async . [(20150412 2207) nil "Asynchronous processing in Emacs" tar])
 (better-defaults . [(20150404 223) nil "Fixing weird quirks and poor defaults" single])
 (buffer-move . [(20141010 117) nil "easily swap buffers" single])
 (c-eldoc . [(20140728 1452) nil "helpful description of the arguments to C functions" single])
 (cmake-ide . [(20161023 1225) ((emacs (24 1)) (cl-lib (0 5)) (seq (1 11)) (levenshtein (0))) "Calls CMake to find out include paths and other compiler flags" single])
 (company . [(20161113 1747) ((emacs (24 3))) "Modular text completion framework" tar])
 (company-irony . [(20160826 56) ((emacs (24 1)) (company (0 8 0)) (irony (0 2 0)) (cl-lib (0 5))) "company-mode completion back-end for irony-mode" single])
 (company-irony-c-headers . [(20151018 209) ((cl-lib (0 5)) (company (0 9 0)) (irony (0 2 0))) "Company mode backend for C/C++ header files with Irony" single])
 (dash . [(20150311 2355) nil "A modern list library for Emacs" single])
 (diminish . [(20091203 1012) nil "Diminished modes are minor modes with no modeline display" single])
 (epl . [(20150326 1212) ((cl-lib (0 3))) "Emacs Package Library" single])
 (expand-region . [(20150413 1435) nil "Increase selected region by semantic units." tar])
 (flx . [(20140921 739) ((cl-lib (0 3))) "fuzzy matching with good sorting" single])
 (flycheck . [(20161117 144) ((dash (2 12 1)) (pkg-info (0 4)) (let-alist (1 0 4)) (seq (1 11)) (emacs (24 3))) "On-the-fly syntax checking" tar])
 (flycheck-irony . [(20160317 1536) ((emacs (24 1)) (flycheck (0 22)) (irony (0 2 0))) "Flycheck: C/C++ support via Irony" single])
 (git-commit-mode . [(20150330 1048) nil "Major mode for editing git commit messages" single])
 (git-rebase-mode . [(20150122 1114) nil "Major mode for editing git rebase files" single])
 (gitconfig-mode . [(20150405 1627) nil "Major mode for editing .gitconfig files" single])
 (gitignore-mode . [(20150405 1627) nil "Major mode for editing .gitignore files" single])
 (highlight-parentheses . [(20140620 1258) nil "highlight surrounding parentheses" single])
 (hungry-delete . [(20141207 2125) nil "hungry delete minor mode" single])
 (irony . [(20161106 830) ((cl-lib (0 5)) (json (1 2))) "C/C++ minor mode powered by libclang" tar])
 (keyfreq . [(20141124 805) ((cl-lib (0 5))) "track command frequencies" single])
 (levenshtein . [(20051013 1056) nil "Edit distance between two strings." single])
 (magit . [(90141228) ((cl-lib (0 3)) (git-commit-mode (0 14 0)) (git-rebase-mode (0 14 0))) "control Git from Emacs" tar])
 (markdown-mode . [(2 1) ((emacs (24)) (cl-lib (0 5))) "Major mode for Markdown-formatted text" single])
 (move-text . [(20140307 1644) nil "Move current line or region with M-up or M-down." single])
 (multiple-cursors . [(20150307 2322) ((cl-lib (0 5))) "Multiple cursors for Emacs." tar])
 (pkg-info . [(20140610 630) ((epl (0 8))) "Information about packages" single])
 (popwin . [(20150315 600) nil "Popup Window Manager." single])
 (projectile . [(20150405 126) ((pkg-info (0 4))) "Manage and navigate projects in Emacs easily" single])
 (rtags . [(20161115 1841) nil "A front-end for rtags" tar])
 (smartrep . [(20150221 1733) nil "Support sequential operation which omitted prefix keys." single])
 (switch-window . [(20150114 215) ((cl-lib (0 5))) "A *visual* way to choose a window to switch to" single])
 (undo-tree . [(20140509 522) nil "Treat undo history as a tree" single])
 (helm-core . [(20170119 158) ((emacs (24 4)) (async (1 9))) "Development files for Helm" tar])
 (popup . [(20160709 729) ((cl-lib (0 5))) "Visual Popup User Interface" single])
 (helm . [(20170119 158) ((emacs (24 4)) (async (1 9)) (popup (0 5 3)) (helm-core (2 5 0))) "Helm is an Emacs incremental and narrowing framework" tar])
 (helm-projectile . [(0 14 0) ((helm (1 7 7)) (projectile (0 14 0)) (cl-lib (0 3))) "Helm integration for Projectile" single])
 (helm-swoop . [(1 7 2) ((helm (1 0)) (emacs (24 3))) "Efficiently hopping squeezed lines powered by helm interface" single])
)
